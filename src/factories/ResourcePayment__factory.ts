/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
	ResourcePayment,
	ResourcePaymentInterface,
} from "./ResourcePayment";

const _abi = [
	{
		inputs: [
			{
				internalType: "address",
				name: "owner",
				type: "address",
			},
			{
				internalType: "contract IRootChannel",
				name: "_channel",
				type: "address",
			},
		],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "buyer",
				type: "address",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "level",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "cost",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "boughtTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expiration",
						type: "uint256",
					},
					{
						components: [
							{
								internalType: "uint256",
								name: "bandwidth",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "storageAmount",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "buildingTime",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "pricePerMonth",
								type: "uint256",
							},
							{
								internalType: "bool",
								name: "isValid",
								type: "bool",
							},
							{
								internalType: "string",
								name: "name",
								type: "string",
							},
						],
						internalType: "struct ResourceCombos.Combo",
						name: "combo",
						type: "tuple",
					},
				],
				indexed: false,
				internalType: "struct ResourceExpiration.Receipt",
				name: "receipt",
				type: "tuple",
			},
		],
		name: "Buy",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "previousOwner",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newOwner",
				type: "address",
			},
		],
		name: "OwnershipTransferred",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "buyer",
				type: "address",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "level",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "cost",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "boughtTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expiration",
						type: "uint256",
					},
					{
						components: [
							{
								internalType: "uint256",
								name: "bandwidth",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "storageAmount",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "buildingTime",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "pricePerMonth",
								type: "uint256",
							},
							{
								internalType: "bool",
								name: "isValid",
								type: "bool",
							},
							{
								internalType: "string",
								name: "name",
								type: "string",
							},
						],
						internalType: "struct ResourceCombos.Combo",
						name: "combo",
						type: "tuple",
					},
				],
				indexed: false,
				internalType: "struct ResourceExpiration.Receipt",
				name: "receipt",
				type: "tuple",
			},
		],
		name: "Renew",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "buyer",
				type: "address",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "level",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "cost",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "boughtTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expiration",
						type: "uint256",
					},
					{
						components: [
							{
								internalType: "uint256",
								name: "bandwidth",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "storageAmount",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "buildingTime",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "pricePerMonth",
								type: "uint256",
							},
							{
								internalType: "bool",
								name: "isValid",
								type: "bool",
							},
							{
								internalType: "string",
								name: "name",
								type: "string",
							},
						],
						internalType: "struct ResourceCombos.Combo",
						name: "combo",
						type: "tuple",
					},
				],
				indexed: false,
				internalType: "struct ResourceExpiration.Receipt",
				name: "receipt",
				type: "tuple",
			},
		],
		name: "Upgrade",
		type: "event",
	},
	{
		inputs: [],
		name: "MaxTotalExpiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MinExpiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				components: [
					{
						internalType: "uint256",
						name: "bandwidth",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "storageAmount",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "buildingTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "pricePerMonth",
						type: "uint256",
					},
					{
						internalType: "bool",
						name: "isValid",
						type: "bool",
					},
					{
						internalType: "string",
						name: "name",
						type: "string",
					},
				],
				internalType: "struct ResourceCombos.Combo",
				name: "combo",
				type: "tuple",
			},
		],
		name: "addCombo",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract IERC20",
				name: "token",
				type: "address",
			},
		],
		name: "addToken",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "beneficiary",
		outputs: [
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "tokenIndex",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "buy",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "canBuy",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "canRenew",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "canUpgrade",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "channel",
		outputs: [
			{
				internalType: "contract IRootChannel",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "comboLength",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		name: "combos",
		outputs: [
			{
				internalType: "uint256",
				name: "bandwidth",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "storageAmount",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "buildingTime",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "pricePerMonth",
				type: "uint256",
			},
			{
				internalType: "bool",
				name: "isValid",
				type: "bool",
			},
			{
				internalType: "string",
				name: "name",
				type: "string",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "buyer",
				type: "address",
			},
		],
		name: "expiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "getComboCost",
		outputs: [
			{
				internalType: "uint256",
				name: "cost",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "buyer",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "getUpgradeExchange",
		outputs: [
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "buyer",
				type: "address",
			},
		],
		name: "isExpired",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "lock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "maxTotalRenewExpiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "maxTotalUpgradeExpiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "owner",
		outputs: [
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		name: "receipts",
		outputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "cost",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "boughtTime",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration",
				type: "uint256",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "bandwidth",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "storageAmount",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "buildingTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "pricePerMonth",
						type: "uint256",
					},
					{
						internalType: "bool",
						name: "isValid",
						type: "bool",
					},
					{
						internalType: "string",
						name: "name",
						type: "string",
					},
				],
				internalType: "struct ResourceCombos.Combo",
				name: "combo",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "index",
				type: "uint256",
			},
		],
		name: "removeToken",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "tokenIndex",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "renew",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "renounceOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "setMaxTotalExpriation",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "setMinExpriation",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "sync",
		outputs: [
			{
				internalType: "bytes4",
				name: "",
				type: "bytes4",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "tokenLength",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		name: "tokens",
		outputs: [
			{
				internalType: "contract IERC20",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "newOwner",
				type: "address",
			},
		],
		name: "transferOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract IRootChannel",
				name: "_channel",
				type: "address",
			},
		],
		name: "transferRootChannel",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "unlock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "bandwidth",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "storageAmount",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "buildingTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "pricePerMonth",
						type: "uint256",
					},
					{
						internalType: "bool",
						name: "isValid",
						type: "bool",
					},
					{
						internalType: "string",
						name: "name",
						type: "string",
					},
				],
				internalType: "struct ResourceCombos.Combo",
				name: "combo",
				type: "tuple",
			},
		],
		name: "updateCombo",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "tokenIndex",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "moreExpiration",
				type: "uint256",
			},
		],
		name: "upgrade",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract IERC20",
				name: "token",
				type: "address",
			},
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "amount",
				type: "uint256",
			},
		],
		name: "withdraw",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		stateMutability: "payable",
		type: "receive",
	},
];

const _bytecode =
	"0x608060405262278d006004556301e133806005556007805460ff63ffffffff60a81b011916637d3d085760a81b1790553480156200003c57600080fd5b5060405162003760380380620037608339810160408190526200005f9162000632565b80620000746200006e620004a3565b620004a7565b600180546001600160a01b0319166001600160a01b03929092169190911790556200009f82620004f7565b60078054610100600160a81b03191630610100021790556040805160c08101825264190000000081526401000000006020808301918252613a9883850190815260006060850181815260808601828152875180890190985260048852634672656560e01b8886015260a087019788526002805460018101825593528651600080516020620036a083398151915260069094029384019081559551600080516020620036c08339815191528401559251600080516020620036e083398151915283015551600080516020620037008339815191528201559051600080516020620037208339815191528201805460ff191691151591909117905593518051601e95620001c093600080516020620037408339815191529091019201906200058c565b50506040805160c08101825261012c841b81526028841b602080830191825261753083850190815268022b1c8c1227a00000606085019081526001608086018181528751808901909852600388526250726f60e81b8886015260a0870197885260028054928301815560005286516006909202600080516020620036a083398151915281019283559551600080516020620036c08339815191528701559251600080516020620036e08339815191528601559051600080516020620037008339815191528501559051600080516020620037208339815191528401805491151560ff1990921691909117905593518051939550620002d59360008051602062003740833981519152909301929101906200058c565b50506040805160c0810182526103e8841b81526064841b60208083019182526201d4c0838501908152680ac9ae05a71ebc00006060850190815260016080860181815287518089019098526008885267427573696e65737360c01b8886015260a0870197885260028054928301815560005286516006909202600080516020620036a083398151915281019283559551600080516020620036c08339815191528701559251600080516020620036e08339815191528601559051600080516020620037008339815191528501559051600080516020620037208339815191528401805491151560ff1990921691909117905593518051939550620003f09360008051602062003740833981519152909301929101906200058c565b5050600680546001818101835560008390527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f91820180546001600160a01b031990811673d96193e3893c93419b89ec26266ae25f13180d9c17909155835480830185558301805482167337016a754e106ca6d291a4c9b21e88cd820aab22179055835491820190935501805490911673662d80eb0593b5126618db65d484631198f06d37179055506200073e92505050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000501620004a3565b6001600160a01b0316620005146200057d565b6001600160a01b031614620005465760405162461bcd60e51b81526004016200053d90620006b6565b60405180910390fd5b6001600160a01b0381166200056f5760405162461bcd60e51b81526004016200053d9062000670565b6200057a81620004a7565b50565b6000546001600160a01b031690565b8280546200059a90620006eb565b90600052602060002090601f016020900481019282620005be576000855562000609565b82601f10620005d957805160ff191683800117855562000609565b8280016001018555821562000609579182015b8281111562000609578251825591602001919060010190620005ec565b50620006179291506200061b565b5090565b5b808211156200061757600081556001016200061c565b6000806040838503121562000645578182fd5b8251620006528162000728565b6020840151909250620006658162000728565b809150509250929050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6002810460018216806200070057607f821691505b602082108114156200072257634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03811681146200057a57600080fd5b612f52806200074e6000396000f3fe6080604052600436106102085760003560e01c8063a1adf83311610118578063d9caed12116100a0578063f527e29a1161006f578063f527e29a146105da578063f576b700146105fa578063f83d08ba1461060f578063fe1538d414610624578063fff6cae9146106445761022e565b8063d9caed1214610565578063de66341e14610585578063ee2bd1681461059a578063f2fde38b146105ba5761022e565b8063ba5305f2116100e7578063ba5305f2146104c5578063c475abff146104e5578063d3fa6dd014610505578063d48bfca714610525578063d6fa8abc146105455761022e565b8063a1adf83314610449578063a69df4b51461045e578063aefa7c9b14610473578063ba2eb541146104a55761022e565b80634f64b2be1161019b5780637b10f06d1161016a5780637b10f06d146103d55780637bbdb96e146103ea578063860a83f9146103ff5780638da5cb5b146104145780638fc24ef1146104295761022e565b80634f64b2be1461036057806353065b17146103805780636e507c6e146103a0578063715018a6146103c05761022e565b80633ca88a2f116101d75780633ca88a2f146102cf57806340993b26146102ef578063461b442c1461030f5780634de4797b1461032f5761022e565b806304dbe3fe146102335780630fe18b301461026957806336c5d7241461028b57806338af3eed146102ad5761022e565b3661022e5760405162461bcd60e51b81526004016102259061290e565b60405180910390fd5b600080fd5b34801561023f57600080fd5b5061025361024e3660046125dc565b610666565b6040516102609190612d38565b60405180910390f35b34801561027557600080fd5b5061027e61069b565b6040516102609190612895565b34801561029757600080fd5b506102ab6102a63660046126b2565b61070d565b005b3480156102b957600080fd5b506102c2610789565b6040516102609190612844565b3480156102db57600080fd5b5061027e6102ea3660046126b2565b61079d565b3480156102fb57600080fd5b506102ab61030a366004612730565b610806565b34801561031b57600080fd5b5061025361032a36600461270f565b610bea565b34801561033b57600080fd5b5061034f61034a3660046125dc565b610cbe565b604051610260959493929190612d80565b34801561036c57600080fd5b506102c261037b3660046126b2565b610dc5565b34801561038c57600080fd5b506102ab61039b3660046126b2565b610def565b3480156103ac57600080fd5b506102ab6103bb3660046126ca565b610e33565b3480156103cc57600080fd5b506102ab610f23565b3480156103e157600080fd5b50610253610f6e565b3480156103f657600080fd5b506102c2610f74565b34801561040b57600080fd5b50610253610f83565b34801561042057600080fd5b506102c2610ff6565b34801561043557600080fd5b506102ab61044436600461267f565b611005565b34801561045557600080fd5b50610253611174565b34801561046a57600080fd5b506102ab61117a565b34801561047f57600080fd5b5061049361048e3660046126b2565b6111c5565b60405161026096959493929190612d41565b3480156104b157600080fd5b5061027e6104c03660046125dc565b61129d565b3480156104d157600080fd5b506102536104e03660046126b2565b6112d3565b3480156104f157600080fd5b506102ab61050036600461270f565b61130d565b34801561051157600080fd5b506102536105203660046125f8565b6118d0565b34801561053157600080fd5b506102ab6105403660046125dc565b6119a0565b34801561055157600080fd5b506102ab6105603660046125dc565b611a31565b34801561057157600080fd5b506102ab61058036600461263f565b611a92565b34801561059157600080fd5b50610253611aea565b3480156105a657600080fd5b506102ab6105b53660046126b2565b611af0565b3480156105c657600080fd5b506102ab6105d53660046125dc565b611b34565b3480156105e657600080fd5b5061027e6105f53660046126b2565b611ba5565b34801561060657600080fd5b50610253611cc9565b34801561061b57600080fd5b506102ab611ccf565b34801561063057600080fd5b506102ab61063f366004612730565b611d1d565b34801561065057600080fd5b50610659612163565b60405161026091906128a0565b6001600160a01b038116600090815260036020819052604082209081015460029091015461069391612173565b90505b919050565b3360009081526003602052604081205460028054829081106106cd57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166106f257600091505061070a565b50503360009081526003602052604090206002015415155b90565b61071561217f565b6001600160a01b0316610726610ff6565b6001600160a01b03161461074c5760405162461bcd60e51b815260040161022590612ac2565b6006818154811061076d57634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b031916905550565b60075461010090046001600160a01b031681565b6000600282815481106107c057634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166107e357506000610696565b33600090815260036020526040902060020154158061069357506106933361129d565b600654839081106108295760405162461bcd60e51b815260040161022590612ba9565b6002548390811061084c5760405162461bcd60e51b815260040161022590612c71565b6002818154811061086d57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166108a05760405162461bcd60e51b815260040161022590612a41565b826004548110156108c35760405162461bcd60e51b815260040161022590612b2e565b846108cd8161079d565b6108e95760405162461bcd60e51b8152600401610225906129c9565b60075460ff161561090c5760405162461bcd60e51b815260040161022590612992565b33600081815260036020526040902060020154158061092f575061092f8161129d565b61094b5760405162461bcd60e51b8152600401610225906129c9565b60006109578888610bea565b90506109b282600760019054906101000a90046001600160a01b03168360068d8154811061099557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316929190612183565b6040518060a0016040528089815260200182815260200142815260200188815260200160028a815481106109f657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152602001600582018054610a6290612e92565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8e90612e92565b8015610adb5780601f10610ab057610100808354040283529160200191610adb565b820191906000526020600020905b815481529060010190602001808311610abe57829003601f168201915b5050509190925250505090526001600160a01b038316600090815260036020818152604092839020845181558482015160018201558484015160028201556060808601519382019390935560808086015180516004840190815581850151600585015595810151600684015593840151600783015583015160088201805460ff191691151591909117905560a08301518051919492610b829260098701929091019061241a565b505050905050610b906121db565b6001600160a01b0382166000818152600360205260409081902090517fa1f8d6ef91276721a01ec83826c0444301aa786ff159faec92e89304c4283b0291610bd791612cb4565b60405180910390a2505050505050505050565b60025460009083908110610c105760405162461bcd60e51b815260040161022590612c71565b60028181548110610c3157634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16610c645760405162461bcd60e51b815260040161022590612a41565b610cb662278d00610cb08560028881548110610c9057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015461221090919063ffffffff16565b9061221c565b949350505050565b60036020818152600092835260409283902080546001820154600283015494830154865160c081018852600485018054825260058601549682019690965260068501549781019790975260078401546060880152600884015460ff1615156080880152600984018054939792969591949360a084019190610d3e90612e92565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6a90612e92565b8015610db75780601f10610d8c57610100808354040283529160200191610db7565b820191906000526020600020905b815481529060010190602001808311610d9a57829003601f168201915b505050505081525050905085565b60068181548110610dd557600080fd5b6000918252602090912001546001600160a01b0316905081565b610df761217f565b6001600160a01b0316610e08610ff6565b6001600160a01b031614610e2e5760405162461bcd60e51b815260040161022590612ac2565b600455565b610e3b61217f565b6001600160a01b0316610e4c610ff6565b6001600160a01b031614610e725760405162461bcd60e51b815260040161022590612ac2565b6002548210610e935760405162461bcd60e51b815260040161022590612af7565b8060028381548110610eb557634e487b7160e01b600052603260045260246000fd5b60009182526020918290208351600692909202019081558282015160018201556040830151600282015560608301516003820155608083015160048201805460ff191691151591909117905560a083015180519192610f1c9260058501929091019061241a565b5050505050565b610f2b61217f565b6001600160a01b0316610f3c610ff6565b6001600160a01b031614610f625760405162461bcd60e51b815260040161022590612ac2565b610f6c6000612228565b565b60055481565b6001546001600160a01b031681565b6000610f8d61069b565b610f995750600061070a565b610fa23361129d565b15610fb0575060055461070a565b336000908152600360208190526040822090810154600290910154610fe0914291610fda91612173565b90612278565b600554909150610ff09082612278565b91505090565b6000546001600160a01b031690565b61100d61217f565b6001600160a01b031661101e610ff6565b6001600160a01b0316146110445760405162461bcd60e51b815260040161022590612ac2565b6002805460018101825560009190915281517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace60069092029182019081556020808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf84015560408401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad084015560608401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad184015560808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad28401805460ff191691151591909117905560a08401518051859461116e937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad390910192019061241a565b50505050565b60045481565b61118261217f565b6001600160a01b0316611193610ff6565b6001600160a01b0316146111b95760405162461bcd60e51b815260040161022590612ac2565b6007805460ff19169055565b600281815481106111d557600080fd5b600091825260209091206006909102018054600182015460028301546003840154600485015460058601805495975093959294919360ff909116929161121a90612e92565b80601f016020809104026020016040519081016040528092919081815260200182805461124690612e92565b80156112935780601f1061126857610100808354040283529160200191611293565b820191906000526020600020905b81548152906001019060200180831161127657829003601f168201915b5050505050905086565b6001600160a01b03811660009081526003602081905260408220908101546002909101546112ca91612173565b42101592915050565b60006112de82611ba5565b6112ea57506000610696565b60006112f633846118d0565b6005549091506113069082612278565b9392505050565b600654829081106113305760405162461bcd60e51b815260040161022590612ba9565b816004548110156113535760405162461bcd60e51b815260040161022590612b2e565b61135b61069b565b6113775760405162461bcd60e51b815260040161022590612a00565b60075460ff161561139a5760405162461bcd60e51b815260040161022590612992565b3360008181526003602052604090205460025481106113cb5760405162461bcd60e51b815260040161022590612c71565b600281815481106113ec57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff1661141f5760405162461bcd60e51b815260040161022590612a41565b600061142b8287610bea565b905061146983600760019054906101000a90046001600160a01b03168360068b8154811061099557634e487b7160e01b600052603260045260246000fd5b6114728361129d565b15611652576040518060a00160405280838152602001828152602001428152602001878152602001600284815481106114bb57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815260200160058201805461152790612e92565b80601f016020809104026020016040519081016040528092919081815260200182805461155390612e92565b80156115a05780601f10611575576101008083540402835291602001916115a0565b820191906000526020600020905b81548152906001019060200180831161158357829003601f168201915b5050509190925250505090526001600160a01b038416600090815260036020818152604092839020845181558482015160018201558484015160028201556060808601519382019390935560808086015180516004840190815581850151600585015595810151600684015593840151600783015583015160088201805460ff191691151591909117905560a083015180519194926116479260098701929091019061241a565b505050905050611870565b6001600160a01b0383166000908152600360208190526040822090810154600290910154611685914291610fda91612173565b90506040518060a001604052808481526020018381526020014281526020016116b7838a61217390919063ffffffff16565b8152602001600285815481106116dd57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815260200160058201805461174990612e92565b80601f016020809104026020016040519081016040528092919081815260200182805461177590612e92565b80156117c25780601f10611797576101008083540402835291602001916117c2565b820191906000526020600020905b8154815290600101906020018083116117a557829003601f168201915b5050509190925250505090526001600160a01b038516600090815260036020818152604092839020845181558482015160018201558484015160028201556060808601519382019390935560808086015180516004840190815581850151600585015595810151600684015593840151600783015583015160088201805460ff191691151591909117905560a083015180519194926118699260098701929091019061241a565b5050505050505b6118786121db565b6001600160a01b0383166000818152600360205260409081902090517f05f8eec28790611d722ba3fd1682589a1d669e2ca0e625a6079384edccda6be1916118bf91612cb4565b60405180910390a250505050505050565b6001600160a01b03821660009081526003602081905260408220908101546002909101548291611906914291610fda9190612173565b6001600160a01b0385166000908152600360208190526040822090810154600190910154929350909161193e9190610cb09085612210565b9050600061198a62278d006002878154811061196a57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015461221c90919063ffffffff16565b9050611996828261221c565b9695505050505050565b6119a861217f565b6001600160a01b03166119b9610ff6565b6001600160a01b0316146119df5760405162461bcd60e51b815260040161022590612ac2565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0392909216919091179055565b611a3961217f565b6001600160a01b0316611a4a610ff6565b6001600160a01b031614611a705760405162461bcd60e51b815260040161022590612ac2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b611a9a61217f565b6001600160a01b0316611aab610ff6565b6001600160a01b031614611ad15760405162461bcd60e51b815260040161022590612ac2565b611ae56001600160a01b0384168383612284565b505050565b60065490565b611af861217f565b6001600160a01b0316611b09610ff6565b6001600160a01b031614611b2f5760405162461bcd60e51b815260040161022590612ac2565b600555565b611b3c61217f565b6001600160a01b0316611b4d610ff6565b6001600160a01b031614611b735760405162461bcd60e51b815260040161022590612ac2565b6001600160a01b038116611b995760405162461bcd60e51b8152600401610225906128c8565b611ba281612228565b50565b336000908152600360205260408120546002805482908110611bd757634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16611bfc576000915050610696565b60028381548110611c1d57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16611c42576000915050610696565b611c4b3361129d565b15611c5a576000915050610696565b60028181548110611c7b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015460028481548110611cae57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015411915050919050565b60025490565b611cd761217f565b6001600160a01b0316611ce8610ff6565b6001600160a01b031614611d0e5760405162461bcd60e51b815260040161022590612ac2565b6007805460ff19166001179055565b60065483908110611d405760405162461bcd60e51b815260040161022590612ba9565b60025483908110611d635760405162461bcd60e51b815260040161022590612c71565b60028181548110611d8457634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16611db75760405162461bcd60e51b815260040161022590612a41565b33600090815260036020526040902054600280548692908110611dea57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015460028281548110611e1d57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015411611e4c5760405162461bcd60e51b815260040161022590612951565b611e553361129d565b15611e725760405162461bcd60e51b815260040161022590612bf0565b60075460ff1615611e955760405162461bcd60e51b815260040161022590612992565b336000611ea282886118d0565b90506000611eb08883610bea565b90508615611f1c576000611ec48989610bea565b9050611ed08282612173565b9150611edc8389612173565b9250611f1a84600760019054906101000a90046001600160a01b03168360068e8154811061099557634e487b7160e01b600052603260045260246000fd5b505b600454821015611f3e5760405162461bcd60e51b815260040161022590612b2e565b6040518060a0016040528089815260200182815260200142815260200183815260200160028a81548110611f8257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152602001600582018054611fee90612e92565b80601f016020809104026020016040519081016040528092919081815260200182805461201a90612e92565b80156120675780601f1061203c57610100808354040283529160200191612067565b820191906000526020600020905b81548152906001019060200180831161204a57829003601f168201915b5050509190925250505090526001600160a01b038416600090815260036020818152604092839020845181558482015160018201558484015160028201556060808601519382019390935560808086015180516004840190815581850151600585015595810151600684015593840151600783015583015160088201805460ff191691151591909117905560a0830151805191949261210e9260098701929091019061241a565b50505090505061211c6121db565b6001600160a01b0383166000818152600360205260409081902090517f2a61e4ae19a7d6bc0e1fbca27fa2036fad518c08ad853612a750ddeff660e33a91610bd791612cb4565b600754600160a81b900460e01b81565b60006113068284612df8565b3390565b61116e846323b872dd60e01b8585856040516024016121a493929190612858565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526122a3565b60055433600090815260036020819052604090912001541115610f6c5760405162461bcd60e51b815260040161022590612a78565b60006113068284612e30565b60006113068284612e10565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006113068284612e4f565b611ae58363a9059cbb60e01b84846040516024016121a492919061287c565b60006122f8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123329092919063ffffffff16565b805190915015611ae557808060200190518101906123169190612623565b611ae55760405162461bcd60e51b815260040161022590612c27565b6060610cb6848460008585612346856123db565b6123625760405162461bcd60e51b815260040161022590612b72565b600080866001600160a01b0316858760405161237e9190612828565b60006040518083038185875af1925050503d80600081146123bb576040519150601f19603f3d011682016040523d82523d6000602084013e6123c0565b606091505b50915091506123d08282866123e1565b979650505050505050565b3b151590565b606083156123f0575081611306565b8251156124005782518084602001fd5b8160405162461bcd60e51b815260040161022591906128b5565b82805461242690612e92565b90600052602060002090601f016020900481019282612448576000855561248e565b82601f1061246157805160ff191683800117855561248e565b8280016001018555821561248e579182015b8281111561248e578251825591602001919060010190612473565b5061249a92915061249e565b5090565b5b8082111561249a576000815560010161249f565b803561069681612f0e565b600082601f8301126124ce578081fd5b813567ffffffffffffffff808211156124e9576124e9612ee3565b604051601f8301601f19168101602001828111828210171561250d5761250d612ee3565b604052828152848301602001861015612524578384fd5b82602086016020830137918201602001929092529392505050565b600060c08284031215612550578081fd5b60405160c0810167ffffffffffffffff828210818311171561257457612574612ee3565b81604052829350843583526020850135602084015260408501356040840152606085013560608401526125a9608086016124b3565b608084015260a08501359150808211156125c257600080fd5b506125cf858286016124be565b60a0830152505092915050565b6000602082840312156125ed578081fd5b813561130681612ef9565b6000806040838503121561260a578081fd5b823561261581612ef9565b946020939093013593505050565b600060208284031215612634578081fd5b815161130681612f0e565b600080600060608486031215612653578081fd5b833561265e81612ef9565b9250602084013561266e81612ef9565b929592945050506040919091013590565b600060208284031215612690578081fd5b813567ffffffffffffffff8111156126a6578182fd5b610cb68482850161253f565b6000602082840312156126c3578081fd5b5035919050565b600080604083850312156126dc578182fd5b82359150602083013567ffffffffffffffff8111156126f9578182fd5b6127058582860161253f565b9150509250929050565b60008060408385031215612721578182fd5b50508035926020909101359150565b600080600060608486031215612744578283fd5b505081359360208301359350604090920135919050565b60008151808452612773816020860160208601612e66565b601f01601f19169290920160200192915050565b8054600090600281046001808316806127a157607f831692505b60208084108214156127c157634e487b7160e01b86526022600452602486fd5b6127cb8489612d38565b8280156127df57600181146127f05761281b565b60ff1987168252828201975061281b565b6127f989612dec565b60005b87811015612815578154848201529086019084016127fc565b83019850505b5050505050505092915050565b6000825161283a818460208701612e66565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6001600160e01b031991909116815260200190565b600060208252611306602083018461275b565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526023908201527f5265736f75726365436f6d626f3a2063616e206e6f74207265636569766520656040820152623a341760e91b606082015260800190565b60208082526021908201527f5265736f75726365436f6d626f3a2063616e206e6f7420646f776e67726164656040820152601760f91b606082015260800190565b6020808252601e908201527f4c6f636b61626c653a206f7065726174696f6e206973206c6f636b65642e0000604082015260600190565b6020808252601c908201527f5265736f75726365436f6d626f3a20636f6d626f206578736974732e00000000604082015260600190565b60208082526021908201527f5265736f75726365436f6d626f3a206e6f20636f6d626f20746f2072656e65776040820152601760f91b606082015260800190565b6020808252601d908201527f5265736f75726365436f6d626f3a20496e76616c696420636f6d626f2e000000604082015260600190565b6020808252602a908201527f5265736f75726365436f6d626f3a20746f74616c2065787069726174696f6e206040820152693a37b7903630b933b29760b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f5265736f75726365436f6d626f3a20496e76616c6964206c6576656c2e000000604082015260600190565b60208082526024908201527f5265736f75726365436f6d626f3a2065787069726174696f6e20746f6f20736d60408201526330b6361760e11b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526027908201527f5265736f75726365436f6d626f3a20746f6b656e496e646578206f7574206f66604082015266103930b733b29760c91b606082015260800190565b6020808252601d908201527f5265736f75726365436f6d626f3a20636f6d626f20657870697265642e000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526023908201527f5265736f75726365436f6d626f3a20496e76616c696420636f6d626f206c657660408201526232b61760e91b606082015260800190565b6000602082528254602083015260018301546040830152600283015460608301526003830154608083015260a080830152600483015460c0830152600583015460e08301526006830154610100830152600783015461012083015260ff600884015416151561014083015260c0610160830152611306610180830160098501612787565b90815260200190565b6000878252866020830152856040830152846060830152831515608083015260c060a0830152612d7460c083018461275b565b98975050505050505050565b600086825285602083015284604083015283606083015260a06080830152825160a0830152602083015160c0830152604083015160e083015260608301516101008301526080830151151561012083015260a083015160c0610140840152612d7461016084018261275b565b60009081526020902090565b60008219821115612e0b57612e0b612ecd565b500190565b600082612e2b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612e4a57612e4a612ecd565b500290565b600082821015612e6157612e61612ecd565b500390565b60005b83811015612e81578181015183820152602001612e69565b8381111561116e5750506000910152565b600281046001821680612ea657607f821691505b60208210811415612ec757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611ba257600080fd5b8015158114611ba257600080fdfea2646970667358221220f781e733289a2828dba1883af4689e1af70ccb9bee2001860f3a2a686f6a215064736f6c63430008000033405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3";

export class ResourcePayment__factory extends ContractFactory {
	constructor(
		...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
	) {
		if (args.length === 1) {
			super(_abi, _bytecode, args[0]);
		} else {
			super(...args);
		}
	}

	deploy(
		owner: string,
		_channel: string,
		overrides?: Overrides & { from?: string | Promise<string> }
	): Promise<ResourcePayment> {
		return super.deploy(
			owner,
			_channel,
			overrides || {}
		) as Promise<ResourcePayment>;
	}
	getDeployTransaction(
		owner: string,
		_channel: string,
		overrides?: Overrides & { from?: string | Promise<string> }
	): TransactionRequest {
		return super.getDeployTransaction(owner, _channel, overrides || {});
	}
	attach(address: string): ResourcePayment {
		return super.attach(address) as ResourcePayment;
	}
	connect(signer: Signer): ResourcePayment__factory {
		return super.connect(signer) as ResourcePayment__factory;
	}
	static readonly bytecode = _bytecode;
	static readonly abi = _abi;
	static createInterface(): ResourcePaymentInterface {
		return new utils.Interface(_abi) as ResourcePaymentInterface;
	}
	static connect(
		address: string,
		signerOrProvider: Signer | Provider
	): ResourcePayment {
		return new Contract(address, _abi, signerOrProvider) as ResourcePayment;
	}
}
