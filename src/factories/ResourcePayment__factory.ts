/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
	ResourcePayment,
	ResourcePaymentInterface,
} from "./ResourcePayment";

const _abi = [
	{
		inputs: [
			{
				internalType: "address",
				name: "owner",
				type: "address",
			},
			{
				internalType: "contract IRootChannel",
				name: "_channel",
				type: "address",
			},
		],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "level",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "boughtTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expiration",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expectedCost",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "realCost",
						type: "uint256",
					},
					{
						components: [
							{
								internalType: "uint256",
								name: "bandwidth",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "storageAmount",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "buildingTime",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "pricePerMonth",
								type: "uint256",
							},
							{
								internalType: "bool",
								name: "isValid",
								type: "bool",
							},
							{
								internalType: "string",
								name: "name",
								type: "string",
							},
						],
						internalType: "struct ResourceCombos.Combo",
						name: "combo",
						type: "tuple",
					},
				],
				indexed: false,
				internalType: "struct ResourceExpiration.Receipt",
				name: "receipt",
				type: "tuple",
			},
		],
		name: "Buy",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "previousOwner",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newOwner",
				type: "address",
			},
		],
		name: "OwnershipTransferred",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "level",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "boughtTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expiration",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expectedCost",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "realCost",
						type: "uint256",
					},
					{
						components: [
							{
								internalType: "uint256",
								name: "bandwidth",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "storageAmount",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "buildingTime",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "pricePerMonth",
								type: "uint256",
							},
							{
								internalType: "bool",
								name: "isValid",
								type: "bool",
							},
							{
								internalType: "string",
								name: "name",
								type: "string",
							},
						],
						internalType: "struct ResourceCombos.Combo",
						name: "combo",
						type: "tuple",
					},
				],
				indexed: false,
				internalType: "struct ResourceExpiration.Receipt",
				name: "receipt",
				type: "tuple",
			},
		],
		name: "Renew",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "level",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "boughtTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expiration",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expectedCost",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "realCost",
						type: "uint256",
					},
					{
						components: [
							{
								internalType: "uint256",
								name: "bandwidth",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "storageAmount",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "buildingTime",
								type: "uint256",
							},
							{
								internalType: "uint256",
								name: "pricePerMonth",
								type: "uint256",
							},
							{
								internalType: "bool",
								name: "isValid",
								type: "bool",
							},
							{
								internalType: "string",
								name: "name",
								type: "string",
							},
						],
						internalType: "struct ResourceCombos.Combo",
						name: "combo",
						type: "tuple",
					},
				],
				indexed: false,
				internalType: "struct ResourceExpiration.Receipt",
				name: "receipt",
				type: "tuple",
			},
		],
		name: "Upgrade",
		type: "event",
	},
	{
		inputs: [],
		name: "MaxTotalExpiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MinExpiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				components: [
					{
						internalType: "uint256",
						name: "bandwidth",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "storageAmount",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "buildingTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "pricePerMonth",
						type: "uint256",
					},
					{
						internalType: "bool",
						name: "isValid",
						type: "bool",
					},
					{
						internalType: "string",
						name: "name",
						type: "string",
					},
				],
				internalType: "struct ResourceCombos.Combo",
				name: "combo",
				type: "tuple",
			},
		],
		name: "addCombo",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract IERC20",
				name: "token",
				type: "address",
			},
		],
		name: "addToken",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "tokenIndex",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "buy",
		outputs: [
			{
				internalType: "uint256",
				name: "cost",
				type: "uint256",
			},
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "canBuy",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
		],
		name: "canRenew",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "canUpgrade",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "channel",
		outputs: [
			{
				internalType: "contract IRootChannel",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "comboLength",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		name: "combos",
		outputs: [
			{
				internalType: "uint256",
				name: "bandwidth",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "storageAmount",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "buildingTime",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "pricePerMonth",
				type: "uint256",
			},
			{
				internalType: "bool",
				name: "isValid",
				type: "bool",
			},
			{
				internalType: "string",
				name: "name",
				type: "string",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
		],
		name: "expiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
		],
		name: "expirationAt",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "getComboCost",
		outputs: [
			{
				internalType: "uint256",
				name: "cost",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "getUpgradeExchange",
		outputs: [
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
		],
		name: "isExpired",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "lock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
		],
		name: "maxTotalRenewExpiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "maxTotalUpgradeExpiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "owner",
		outputs: [
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		name: "receipts",
		outputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "boughtTime",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expectedCost",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "realCost",
				type: "uint256",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "bandwidth",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "storageAmount",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "buildingTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "pricePerMonth",
						type: "uint256",
					},
					{
						internalType: "bool",
						name: "isValid",
						type: "bool",
					},
					{
						internalType: "string",
						name: "name",
						type: "string",
					},
				],
				internalType: "struct ResourceCombos.Combo",
				name: "combo",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "index",
				type: "uint256",
			},
		],
		name: "removeToken",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "tokenIndex",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "renew",
		outputs: [
			{
				internalType: "uint256",
				name: "cost",
				type: "uint256",
			},
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "renounceOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "setMaxTotalExpriation",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "setMinExpriation",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "sync",
		outputs: [
			{
				internalType: "bytes4",
				name: "",
				type: "bytes4",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "tokenLength",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		name: "tokens",
		outputs: [
			{
				internalType: "contract IERC20",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "newOwner",
				type: "address",
			},
		],
		name: "transferOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract IRootChannel",
				name: "_channel",
				type: "address",
			},
		],
		name: "transferRootChannel",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "unlock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				components: [
					{
						internalType: "uint256",
						name: "bandwidth",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "storageAmount",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "buildingTime",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "pricePerMonth",
						type: "uint256",
					},
					{
						internalType: "bool",
						name: "isValid",
						type: "bool",
					},
					{
						internalType: "string",
						name: "name",
						type: "string",
					},
				],
				internalType: "struct ResourceCombos.Combo",
				name: "combo",
				type: "tuple",
			},
		],
		name: "updateCombo",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "tokenIndex",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "moreExpiration",
				type: "uint256",
			},
		],
		name: "upgrade",
		outputs: [
			{
				internalType: "uint256",
				name: "value",
				type: "uint256",
			},
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "level",
				type: "uint256",
			},
		],
		name: "validateCombo",
		outputs: [],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract IERC20",
				name: "token",
				type: "address",
			},
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{
				internalType: "uint256",
				name: "amount",
				type: "uint256",
			},
		],
		name: "withdraw",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		stateMutability: "payable",
		type: "receive",
	},
];

const _bytecode =
	"0x6080604052600a6004556301e133806005556007805464ffffffffff1916647d3d0857001790553480156200003357600080fd5b506040516200364638038062003646833981016040819052620000569162000507565b806200006b6200006562000378565b6200037c565b600180546001600160a01b0319166001600160a01b03929092169190911790556200009682620003cc565b6040805160c081018252644b000000008152640a00000000602080830191825261753083850190815268022b1c8c1227a00000606085019081526001608086018181528751808901909852600388526250726f60e81b8886015260a0870197885260028054928301815560005286516000805160206200358683398151915260069093029283019081559551600080516020620035a68339815191528301559251600080516020620035c68339815191528201559051600080516020620035e68339815191528201559051600080516020620036068339815191528201805460ff191691151591909117905593518051601e95620001aa936000805160206200362683398151915290910192019062000461565b50506040805160c0810182526103e8841b81526064841b60208083019182526201d4c0838501908152680ac9ae05a71ebc00006060850190815260016080860181815287518089019098526008885267427573696e65737360c01b8886015260a08701978852600280549283018155600052865160069092026000805160206200358683398151915281019283559551600080516020620035a68339815191528701559251600080516020620035c68339815191528601559051600080516020620035e68339815191528501559051600080516020620036068339815191528401805491151560ff1990921691909117905593518051939550620002c593600080516020620036268339815191529093019291019062000461565b5050600680546001818101835560008390527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f91820180546001600160a01b031990811673998d6e0efc50a349bce64cc8d62d17dc2b34cfbf179091558354808301855583018054821673d1c2f175e03abe8666a5f7054be2f7b305026c1217905583549182019093550180549091167320d3889d5fd378394452d0f3294dbb6f79822a2c179055506200061392505050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620003d662000378565b6001600160a01b0316620003e962000452565b6001600160a01b0316146200041b5760405162461bcd60e51b815260040162000412906200058b565b60405180910390fd5b6001600160a01b038116620004445760405162461bcd60e51b8152600401620004129062000545565b6200044f816200037c565b50565b6000546001600160a01b031690565b8280546200046f90620005c0565b90600052602060002090601f016020900481019282620004935760008555620004de565b82601f10620004ae57805160ff1916838001178555620004de565b82800160010185558215620004de579182015b82811115620004de578251825591602001919060010190620004c1565b50620004ec929150620004f0565b5090565b5b80821115620004ec5760008155600101620004f1565b600080604083850312156200051a578182fd5b82516200052781620005fd565b60208401519092506200053a81620005fd565b809150509250929050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600281046001821680620005d557607f821691505b60208210811415620005f757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03811681146200044f57600080fd5b612f6380620006236000396000f3fe6080604052600436106102135760003560e01c8063a1adf83311610118578063d6fa8abc116100a0578063f2fde38b1161006f578063f2fde38b14610627578063f576b70014610647578063f83d08ba1461065c578063f882d16714610671578063fff6cae91461069157610239565b8063d6fa8abc146105b2578063d9caed12146105d2578063de66341e146105f2578063ee2bd1681461060757610239565b8063aefa7c9b116100e7578063aefa7c9b14610500578063ba2eb54114610532578063d3fa6dd014610552578063d48bfca714610572578063d5b4688c1461059257610239565b8063a1adf83314610496578063a20a2355146104ab578063a69df4b5146104cb578063ad7710f3146104e057610239565b806353065b171161019b5780637b10f06d1161016a5780637b10f06d146104175780637bbdb96e1461042c5780638da5cb5b146104415780638fb16a3b146104565780638fc24ef11461047657610239565b806353065b17146103a25780636e507c6e146103c2578063715018a6146103e25780637a4acc56146103f757610239565b8063240dcd72116101e2578063240dcd72146102e157806336c5d72414610301578063461b442c146103235780634de4797b146103435780634f64b2be1461037557610239565b806304dbe3fe1461023e5780630df91a28146102745780631346c20e146102945780631622dbe4146102c157610239565b366102395760405162461bcd60e51b8152600401610230906129af565b60405180910390fd5b600080fd5b34801561024a57600080fd5b5061025e610259366004612599565b6106b3565b60405161026b9190612d35565b60405180910390f35b34801561028057600080fd5b5061025e61028f3660046125e0565b6106d0565b3480156102a057600080fd5b506102b46102af3660046125b5565b610c53565b60405161026b91906128be565b3480156102cd57600080fd5b5061025e6102dc366004612614565b610cce565b3480156102ed57600080fd5b5061025e6102fc366004612599565b610fe8565b34801561030d57600080fd5b5061032161031c3660046126dd565b61105f565b005b34801561032f57600080fd5b5061025e61033e36600461273a565b6110db565b34801561034f57600080fd5b5061036361035e366004612599565b611138565b60405161026b96959493929190612d7d565b34801561038157600080fd5b506103956103903660046126dd565b611253565b60405161026b9190612844565b3480156103ae57600080fd5b506103216103bd3660046126dd565b61127d565b3480156103ce57600080fd5b506103216103dd3660046126f5565b6112c1565b3480156103ee57600080fd5b506103216113b1565b34801561040357600080fd5b5061025e6104123660046125b5565b6113fc565b34801561042357600080fd5b5061025e611438565b34801561043857600080fd5b5061039561143e565b34801561044d57600080fd5b5061039561144d565b34801561046257600080fd5b506103216104713660046126dd565b61145c565b34801561048257600080fd5b506103216104913660046126aa565b6114d4565b3480156104a257600080fd5b5061025e611643565b3480156104b757600080fd5b506102b46104c6366004612599565b611649565b3480156104d757600080fd5b506103216116cb565b3480156104ec57600080fd5b5061025e6104fb366004612599565b611716565b34801561050c57600080fd5b5061052061051b3660046126dd565b611742565b60405161026b96959493929190612d3e565b34801561053e57600080fd5b506102b461054d366004612599565b61181a565b34801561055e57600080fd5b5061025e61056d3660046125b5565b61184f565b34801561057e57600080fd5b5061032161058d366004612599565b6118f3565b34801561059e57600080fd5b5061025e6105ad366004612614565b611984565b3480156105be57600080fd5b506103216105cd366004612599565b611cdc565b3480156105de57600080fd5b506103216105ed36600461266a565b611d3d565b3480156105fe57600080fd5b5061025e611d95565b34801561061357600080fd5b506103216106223660046126dd565b611d9b565b34801561063357600080fd5b50610321610642366004612599565b611ddf565b34801561065357600080fd5b5061025e611e4d565b34801561066857600080fd5b50610321611e53565b34801561067d57600080fd5b506102b461068c3660046125b5565b611ea1565b34801561069d57600080fd5b506106a6611fcf565b60405161026b91906128c9565b60006106c8426106c284611716565b90611fdd565b90505b919050565b600654600090839081106106f65760405162461bcd60e51b815260040161023090612bd2565b826004548110156107195760405162461bcd60e51b815260040161023090612b57565b8561072381611649565b61073f5760405162461bcd60e51b81526004016102309061296e565b60075460ff16156107625760405162461bcd60e51b815260040161023090612a33565b6001600160a01b0387166000908152600360205260409020546107848161145c565b61078e81876110db565b94506107d433308760068b815481106107b757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316929190611fe9565b6107dd8861181a565b156109cd576040518060c001604052808281526020014281526020018781526020018681526020018681526020016002838154811061082c57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815260200160058201805461089890612ea3565b80601f01602080910402602001604051908101604052809291908181526020018280546108c490612ea3565b80156109115780601f106108e657610100808354040283529160200191610911565b820191906000526020600020905b8154815290600101906020018083116108f457829003601f168201915b5050509190925250505090526001600160a01b0389166000908152600360208181526040928390208451815584820151600182015584840151600282015560608086015193820193909355608080860151600483015560a0808701518051600585019081558186015160068601559681015160078501559485015160088401559084015160098301805460ff191691151591909117905583015180519194926109c292600a870192909101906123d7565b505050905050610bf0565b6001600160a01b038816600090815260036020526040812060028101546001909101546109ff9142916106c291612041565b6040805160c0810182528481524260208201529192508101610a218984612041565b815260200187815260200187815260200160028481548110610a5357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152602001600582018054610abf90612ea3565b80601f0160208091040260200160405190810160405280929190818152602001828054610aeb90612ea3565b8015610b385780601f10610b0d57610100808354040283529160200191610b38565b820191906000526020600020905b815481529060010190602001808311610b1b57829003601f168201915b5050509190925250505090526001600160a01b038a166000908152600360208181526040928390208451815584820151600182015584840151600282015560608086015193820193909355608080860151600483015560a0808701518051600585019081558186015160068601559681015160078501559485015160088401559084015160098301805460ff19169115159190911790558301518051919492610be992600a870192909101906123d7565b5050505050505b610bf98861204d565b6001600160a01b0388166000818152600360205260409081902090517fbdf5679f951ca8833e387ffcf54236a01b6f0b91199d1953c0600bba815348b591610c4091612ca6565b60405180910390a2505050509392505050565b600060028281548110610c7657634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16610c9957506000610cc8565b6001600160a01b0383166000908152600360205260409020600101541580610cc55750610cc58361181a565b90505b92915050565b60065460009084908110610cf45760405162461bcd60e51b815260040161023090612bd2565b82600454811015610d175760405162461bcd60e51b815260040161023090612b57565b8685610d238282610c53565b610d3f5760405162461bcd60e51b8152600401610230906129f2565b60075460ff1615610d625760405162461bcd60e51b815260040161023090612a33565b610d6b8761145c565b610d7587876110db565b9450610d9e33308760068c815481106107b757634e487b7160e01b600052603260045260246000fd5b6040518060c0016040528088815260200142815260200187815260200186815260200186815260200160028981548110610de857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152602001600582018054610e5490612ea3565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8090612ea3565b8015610ecd5780601f10610ea257610100808354040283529160200191610ecd565b820191906000526020600020905b815481529060010190602001808311610eb057829003601f168201915b5050509190925250505090526001600160a01b038a166000908152600360208181526040928390208451815584820151600182015584840151600282015560608086015193820193909355608080860151600483015560a0808701518051600585019081558186015160068601559681015160078501559485015160088401559084015160098301805460ff19169115159190911790558301518051919492610f7e92600a870192909101906123d7565b505050905050610f8d8961204d565b6001600160a01b0389166000818152600360205260409081902090517f4c764297b2fdd404d5eb8e3e767604458dd9d2b2b9454939b11da6ca658b657b91610fd491612ca6565b60405180910390a250505050949350505050565b6000610ff382611649565b610fff575060006106cb565b6110088261181a565b1561101657506005546106cb565b6001600160a01b038216600090815260036020526040812060028101546001909101546110489142916106c291612041565b6005549091506110589082611fdd565b9392505050565b611067612177565b6001600160a01b031661107861144d565b6001600160a01b03161461109e5760405162461bcd60e51b815260040161023090612aeb565b600681815481106110bf57634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b031916905550565b60006110e68361145c565b610cc562278d00611132846002878154811061111257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015461217b90919063ffffffff16565b90612187565b6003602052806000526040600020600091509050806000015490806001015490806002015490806003015490806004015490806005016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581526020016005820180546111cc90612ea3565b80601f01602080910402602001604051908101604052809291908181526020018280546111f890612ea3565b80156112455780601f1061121a57610100808354040283529160200191611245565b820191906000526020600020905b81548152906001019060200180831161122857829003601f168201915b505050505081525050905086565b6006818154811061126357600080fd5b6000918252602090912001546001600160a01b0316905081565b611285612177565b6001600160a01b031661129661144d565b6001600160a01b0316146112bc5760405162461bcd60e51b815260040161023090612aeb565b600455565b6112c9612177565b6001600160a01b03166112da61144d565b6001600160a01b0316146113005760405162461bcd60e51b815260040161023090612aeb565b60025482106113215760405162461bcd60e51b815260040161023090612b20565b806002838154811061134357634e487b7160e01b600052603260045260246000fd5b60009182526020918290208351600692909202019081558282015160018201556040830151600282015560608301516003820155608083015160048201805460ff191691151591909117905560a0830151805191926113aa926005850192909101906123d7565b5050505050565b6113b9612177565b6001600160a01b03166113ca61144d565b6001600160a01b0316146113f05760405162461bcd60e51b815260040161023090612aeb565b6113fa6000612193565b565b60006114088383611ea1565b61141457506000610cc8565b6000611420848461184f565b6005549091506114309082611fdd565b949350505050565b60055481565b6001546001600160a01b031681565b6000546001600160a01b031690565b600254811061147d5760405162461bcd60e51b815260040161023090612c63565b6002818154811061149e57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166114d15760405162461bcd60e51b815260040161023090612a6a565b50565b6114dc612177565b6001600160a01b03166114ed61144d565b6001600160a01b0316146115135760405162461bcd60e51b815260040161023090612aeb565b6002805460018101825560009190915281517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace60069092029182019081556020808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf84015560408401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad084015560608401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad184015560808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad28401805460ff191691151591909117905560a08401518051859461163d937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad39091019201906123d7565b50505050565b60045481565b6001600160a01b038116600090815260036020526040812054600280548290811061168457634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166116a95760009150506106cb565b50506001600160a01b0316600090815260036020526040902060010154151590565b6116d3612177565b6001600160a01b03166116e461144d565b6001600160a01b03161461170a5760405162461bcd60e51b815260040161023090612aeb565b6007805460ff19169055565b6001600160a01b038116600090815260036020526040812060028101546001909101546106c891612041565b6002818154811061175257600080fd5b600091825260209091206006909102018054600182015460028301546003840154600485015460058601805495975093959294919360ff909116929161179790612ea3565b80601f01602080910402602001604051908101604052809291908181526020018280546117c390612ea3565b80156118105780601f106117e557610100808354040283529160200191611810565b820191906000526020600020905b8154815290600101906020018083116117f357829003601f168201915b5050505050905086565b6001600160a01b0381166000908152600360205260408120600281015460019091015461184691612041565b42101592915050565b60008061185b846106b3565b6001600160a01b03851660009081526003602081905260408220600281015491015492935090916118919190611132908561217b565b905060006118dd62278d00600287815481106118bd57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015461218790919063ffffffff16565b90506118e98282612187565b9695505050505050565b6118fb612177565b6001600160a01b031661190c61144d565b6001600160a01b0316146119325760405162461bcd60e51b815260040161023090612aeb565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0392909216919091179055565b600654600090849081106119aa5760405162461bcd60e51b815260040161023090612bd2565b85846119b68282611ea1565b6119d25760405162461bcd60e51b8152600401610230906128f1565b60075460ff16156119f55760405162461bcd60e51b815260040161023090612a33565b6119fe8661145c565b6000611a0a898861184f565b90506000611a1888836110db565b6000965090508615611a6f57611a2e88886110db565b9550611a3a8187612041565b9050611a468288612041565b9150611a6f33308860068d815481106107b757634e487b7160e01b600052603260045260246000fd5b600454821015611a915760405162461bcd60e51b815260040161023090612b57565b6040518060c0016040528089815260200142815260200183815260200182815260200187815260200160028a81548110611adb57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152602001600582018054611b4790612ea3565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7390612ea3565b8015611bc05780601f10611b9557610100808354040283529160200191611bc0565b820191906000526020600020905b815481529060010190602001808311611ba357829003601f168201915b5050509190925250505090526001600160a01b038b166000908152600360208181526040928390208451815584820151600182015584840151600282015560608086015193820193909355608080860151600483015560a0808701518051600585019081558186015160068601559681015160078501559485015160088401559084015160098301805460ff19169115159190911790558301518051919492611c7192600a870192909101906123d7565b505050905050611c808a61204d565b6001600160a01b038a166000818152600360205260409081902090517f2f94d988ed374bbd6213b23e2055761b11bded3f061a35982737cee0dbb0c0ad91611cc791612ca6565b60405180910390a25050505050949350505050565b611ce4612177565b6001600160a01b0316611cf561144d565b6001600160a01b031614611d1b5760405162461bcd60e51b815260040161023090612aeb565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b611d45612177565b6001600160a01b0316611d5661144d565b6001600160a01b031614611d7c5760405162461bcd60e51b815260040161023090612aeb565b611d906001600160a01b03841683836121e3565b505050565b60065490565b611da3612177565b6001600160a01b0316611db461144d565b6001600160a01b031614611dda5760405162461bcd60e51b815260040161023090612aeb565b600555565b611de7612177565b6001600160a01b0316611df861144d565b6001600160a01b031614611e1e5760405162461bcd60e51b815260040161023090612aeb565b6001600160a01b038116611e445760405162461bcd60e51b815260040161023090612928565b6114d181612193565b60025490565b611e5b612177565b6001600160a01b0316611e6c61144d565b6001600160a01b031614611e925760405162461bcd60e51b815260040161023090612aeb565b6007805460ff19166001179055565b6001600160a01b0382166000908152600360205260408120546002805482908110611edc57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16611f01576000915050610cc8565b60028381548110611f2257634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16611f47576000915050610cc8565b611f508461181a565b15611f5f576000915050610cc8565b60028181548110611f8057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015460028481548110611fb357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600301541191505092915050565b600754610100900460e01b81565b6000610cc58284612e60565b61163d846323b872dd60e01b85858560405160240161200a93929190612858565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612202565b6000610cc58284612e09565b6005546001600160a01b0382166000908152600360205260409020600201548291101561208c5760405162461bcd60e51b815260040161023090612aa1565b6007546001600160a01b0383166000908152600360205260409020546002805461217393610100900460e01b923092879290919081106120dc57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016001015461212960036000896001600160a01b03166001600160a01b03168152602001908152602001600020600201544261204190919063ffffffff16565b60405160240161213c949392919061287c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612291565b5050565b3390565b6000610cc58284612e41565b6000610cc58284612e21565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611d908363a9059cbb60e01b848460405160240161200a9291906128a5565b6000612257826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122ef9092919063ffffffff16565b805190915015611d905780806020019051810190612275919061264e565b611d905760405162461bcd60e51b815260040161023090612c19565b6001546040516309813cdd60e31b81526001600160a01b0390911690634c09e6e8906122c19084906004016128de565b600060405180830381600087803b1580156122db57600080fd5b505af11580156113aa573d6000803e3d6000fd5b606061143084846000858561230385612398565b61231f5760405162461bcd60e51b815260040161023090612b9b565b600080866001600160a01b0316858760405161233b9190612828565b60006040518083038185875af1925050503d8060008114612378576040519150601f19603f3d011682016040523d82523d6000602084013e61237d565b606091505b509150915061238d82828661239e565b979650505050505050565b3b151590565b606083156123ad575081611058565b8251156123bd5782518084602001fd5b8160405162461bcd60e51b815260040161023091906128de565b8280546123e390612ea3565b90600052602060002090601f016020900481019282612405576000855561244b565b82601f1061241e57805160ff191683800117855561244b565b8280016001018555821561244b579182015b8281111561244b578251825591602001919060010190612430565b5061245792915061245b565b5090565b5b80821115612457576000815560010161245c565b80356106cb81612f1f565b600082601f83011261248b578081fd5b813567ffffffffffffffff808211156124a6576124a6612ef4565b604051601f8301601f1916810160200182811182821017156124ca576124ca612ef4565b6040528281528483016020018610156124e1578384fd5b82602086016020830137918201602001929092529392505050565b600060c0828403121561250d578081fd5b60405160c0810167ffffffffffffffff828210818311171561253157612531612ef4565b816040528293508435835260208501356020840152604085013560408401526060850135606084015261256660808601612470565b608084015260a085013591508082111561257f57600080fd5b5061258c8582860161247b565b60a0830152505092915050565b6000602082840312156125aa578081fd5b813561105881612f0a565b600080604083850312156125c7578081fd5b82356125d281612f0a565b946020939093013593505050565b6000806000606084860312156125f4578081fd5b83356125ff81612f0a565b95602085013595506040909401359392505050565b60008060008060808587031215612629578081fd5b843561263481612f0a565b966020860135965060408601359560600135945092505050565b60006020828403121561265f578081fd5b815161105881612f1f565b60008060006060848603121561267e578283fd5b833561268981612f0a565b9250602084013561269981612f0a565b929592945050506040919091013590565b6000602082840312156126bb578081fd5b813567ffffffffffffffff8111156126d1578182fd5b611430848285016124fc565b6000602082840312156126ee578081fd5b5035919050565b60008060408385031215612707578182fd5b82359150602083013567ffffffffffffffff811115612724578182fd5b612730858286016124fc565b9150509250929050565b6000806040838503121561274c578182fd5b50508035926020909101359150565b60008151808452612773816020860160208601612e77565b601f01601f19169290920160200192915050565b8054600090600281046001808316806127a157607f831692505b60208084108214156127c157634e487b7160e01b86526022600452602486fd5b6127cb8489612d35565b8280156127df57600181146127f05761281b565b60ff1987168252828201975061281b565b6127f989612dfd565b60005b87811015612815578154848201529086019084016127fc565b83019850505b5050505050505092915050565b6000825161283a818460208701612e77565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6001600160e01b031991909116815260200190565b600060208252610cc5602083018461275b565b6020808252601f908201527f5265736f75726365436f6d626f3a2063616e206e6f7420757067726164652e00604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526021908201527f5265736f75726365436f6d626f3a2063616e6f742072656e657720636f6d626f6040820152601760f91b606082015260800190565b60208082526023908201527f5265736f75726365436f6d626f3a2063616e206e6f74207265636569766520656040820152623a341760e91b606082015260800190565b60208082526021908201527f5265736f75726365436f6d626f3a2063616e206e6f742062757920636f6d626f6040820152601760f91b606082015260800190565b6020808252601e908201527f4c6f636b61626c653a206f7065726174696f6e206973206c6f636b65642e0000604082015260600190565b6020808252601d908201527f5265736f75726365436f6d626f3a20496e76616c696420636f6d626f2e000000604082015260600190565b6020808252602a908201527f5265736f75726365436f6d626f3a20746f74616c2065787069726174696f6e206040820152693a37b7903630b933b29760b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f5265736f75726365436f6d626f3a20496e76616c6964206c6576656c2e000000604082015260600190565b60208082526024908201527f5265736f75726365436f6d626f3a2065787069726174696f6e20746f6f20736d60408201526330b6361760e11b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526027908201527f5265736f75726365436f6d626f3a20746f6b656e496e646578206f7574206f66604082015266103930b733b29760c91b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526023908201527f5265736f75726365436f6d626f3a20496e76616c696420636f6d626f206c657660408201526232b61760e91b606082015260800190565b60006020825282546020830152600183015460408301526002830154606083015260038301546080830152600483015460a083015260c080830152600583015460e083015260068301546101008301526007830154610120830152600883015461014083015260ff600984015416151561016083015260c0610180830152610cc56101a08301600a8501612787565b90815260200190565b6000878252866020830152856040830152846060830152831515608083015260c060a0830152612d7160c083018461275b565b98975050505050505050565b600087825286602083015285604083015284606083015283608083015260c060a0830152825160c0830152602083015160e0830152604083015161010083015260608301516101208301526080830151151561014083015260a083015160c0610160840152612df061018084018261275b565b9998505050505050505050565b60009081526020902090565b60008219821115612e1c57612e1c612ede565b500190565b600082612e3c57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612e5b57612e5b612ede565b500290565b600082821015612e7257612e72612ede565b500390565b60005b83811015612e92578181015183820152602001612e7a565b8381111561163d5750506000910152565b600281046001821680612eb757607f821691505b60208210811415612ed857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146114d157600080fd5b80151581146114d157600080fdfea2646970667358221220c7426e6ac9da8d27a9f892ee5c67e7eda7b670173e6f38f6c9eac8180fd13c6364736f6c63430008000033405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3";

export class ResourcePayment__factory extends ContractFactory {
	constructor(
		...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
	) {
		if (args.length === 1) {
			super(_abi, _bytecode, args[0]);
		} else {
			super(...args);
		}
	}

	deploy(
		owner: string,
		_channel: string,
		overrides?: Overrides & { from?: string | Promise<string> }
	): Promise<ResourcePayment> {
		return super.deploy(
			owner,
			_channel,
			overrides || {}
		) as Promise<ResourcePayment>;
	}
	getDeployTransaction(
		owner: string,
		_channel: string,
		overrides?: Overrides & { from?: string | Promise<string> }
	): TransactionRequest {
		return super.getDeployTransaction(owner, _channel, overrides || {});
	}
	attach(address: string): ResourcePayment {
		return super.attach(address) as ResourcePayment;
	}
	connect(signer: Signer): ResourcePayment__factory {
		return super.connect(signer) as ResourcePayment__factory;
	}
	static readonly bytecode = _bytecode;
	static readonly abi = _abi;
	static createInterface(): ResourcePaymentInterface {
		return new utils.Interface(_abi) as ResourcePaymentInterface;
	}
	static connect(
		address: string,
		signerOrProvider: Signer | Provider
	): ResourcePayment {
		return new Contract(address, _abi, signerOrProvider) as ResourcePayment;
	}
}
